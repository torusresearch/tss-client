{"version":3,"file":"tssLib.umd.min.js","mappings":"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","sources":["webpack://TssLib/webpack/universalModuleDefinition","webpack://TssLib/webpack/bootstrap","webpack://TssLib/webpack/runtime/define property getters","webpack://TssLib/webpack/runtime/global","webpack://TssLib/webpack/runtime/hasOwnProperty shorthand","webpack://TssLib/webpack/runtime/make namespace object","webpack://TssLib/./browser.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TssLib\"] = factory();\n\telse\n\t\troot[\"TssLib\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import wasmData from \"./wasm/client.wasm\";\n\nlet wasm;\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) {\n  return heap[idx];\n}\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n  if (idx < 36) return;\n  heap[idx] = heap_next;\n  heap_next = idx;\n}\n\nfunction takeObject(idx) {\n  const ret = getObject(idx);\n  dropObject(idx);\n  return ret;\n}\n\nconst cachedTextDecoder = new TextDecoder(\"utf-8\", { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0 = new Uint8Array();\n\nfunction getUint8Memory0() {\n  if (cachedUint8Memory0.byteLength === 0) {\n    cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n  return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n  if (heap_next === heap.length) heap.push(heap.length + 1);\n  const idx = heap_next;\n  heap_next = heap[idx];\n\n  heap[idx] = obj;\n  return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = new TextEncoder(\"utf-8\");\n\nconst encodeString =\n  typeof cachedTextEncoder.encodeInto === \"function\"\n    ? function (arg, view) {\n        return cachedTextEncoder.encodeInto(arg, view);\n      }\n    : function (arg, view) {\n        const buf = cachedTextEncoder.encode(arg);\n        view.set(buf);\n        return {\n          read: arg.length,\n          written: buf.length,\n        };\n      };\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n  if (realloc === undefined) {\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr = malloc(buf.length);\n    getUint8Memory0()\n      .subarray(ptr, ptr + buf.length)\n      .set(buf);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr;\n  }\n\n  let len = arg.length;\n  let ptr = malloc(len);\n\n  const mem = getUint8Memory0();\n\n  let offset = 0;\n\n  for (; offset < len; offset++) {\n    const code = arg.charCodeAt(offset);\n    if (code > 0x7f) break;\n    mem[ptr + offset] = code;\n  }\n\n  if (offset !== len) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n    ptr = realloc(ptr, len, (len = offset + arg.length * 3));\n    const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n    const ret = encodeString(arg, view);\n\n    offset += ret.written;\n  }\n\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\n\nfunction isLikeNone(x) {\n  return x === undefined || x === null;\n}\n\nlet cachedInt32Memory0 = new Int32Array();\n\nfunction getInt32Memory0() {\n  if (cachedInt32Memory0.byteLength === 0) {\n    cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n  }\n  return cachedInt32Memory0;\n}\n\nfunction makeMutClosure(arg0, arg1, dtor, f) {\n  const state = { a: arg0, b: arg1, cnt: 1, dtor };\n  const real = (...args) => {\n    // First up with a closure we increment the internal reference\n    // count. This ensures that the Rust closure environment won't\n    // be deallocated while we're invoking it.\n    state.cnt++;\n    const { a } = state;\n    state.a = 0;\n    try {\n      return f(a, state.b, ...args);\n    } finally {\n      if (--state.cnt === 0) {\n        wasm.__wbindgen_export_2.get(state.dtor)(a, state.b);\n      } else {\n        state.a = a;\n      }\n    }\n  };\n  real.original = state;\n\n  return real;\n}\nfunction __wbg_adapter_24(arg0, arg1, arg2) {\n  wasm._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h393860affdd597ff(\n    arg0,\n    arg1,\n    addHeapObject(arg2)\n  );\n}\n\nfunction handleError(f, args) {\n  try {\n    return f.apply(this, args);\n  } catch (e) {\n    wasm.__wbindgen_exn_store(addHeapObject(e));\n  }\n}\n/**\n * @returns {number}\n */\nexport function batch_size() {\n  const ret = wasm.batch_size();\n  return ret >>> 0;\n}\n\n/**\n * @param {string} state\n * @returns {number}\n */\nexport function random_generator(state) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(state, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.random_generator(retptr, ptr0, len0);\n    const r0 = getInt32Memory0()[retptr / 4 + 0];\n    const r1 = getInt32Memory0()[retptr / 4 + 1];\n    const r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return r0;\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n * @param {number} rng\n */\nexport function random_generator_free(rng) {\n  wasm.random_generator_free(rng);\n}\n\n/**\n * @param {string} session\n * @param {number} player_index\n * @param {number} player_count\n * @param {number} threshold\n * @param {string} share\n * @param {string} pubkey\n * @returns {number}\n */\nexport function threshold_signer(session, player_index, player_count, threshold, share, pubkey) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(session, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(share, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passStringToWasm0(pubkey, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len2 = WASM_VECTOR_LEN;\n    wasm.threshold_signer(retptr, ptr0, len0, player_index, player_count, threshold, ptr1, len1, ptr2, len2);\n    const r0 = getInt32Memory0()[retptr / 4 + 0];\n    const r1 = getInt32Memory0()[retptr / 4 + 1];\n    const r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return r0;\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n * @param {number} signer\n */\nexport function threshold_signer_free(signer) {\n  wasm.threshold_signer_free(signer);\n}\n\n/**\n * @param {number} signer\n * @param {number} rng\n * @returns {Promise<any>}\n */\nexport function setup(signer, rng) {\n  const ret = wasm.setup(signer, rng);\n  return takeObject(ret);\n}\n\n/**\n * @param {Uint8Array} parties\n * @param {number} signer\n * @param {number} rng\n * @returns {Promise<any>}\n */\nexport function precompute(parties, signer, rng) {\n  const ret = wasm.precompute(addHeapObject(parties), signer, rng);\n  return takeObject(ret);\n}\n\n/**\n * @param {string} msg\n * @param {boolean} hash_only\n * @param {any} precompute\n * @returns {any}\n */\nexport function local_sign(msg, hash_only, precompute) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(msg, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.local_sign(retptr, ptr0, len0, hash_only, addHeapObject(precompute));\n    const r0 = getInt32Memory0()[retptr / 4 + 0];\n    const r1 = getInt32Memory0()[retptr / 4 + 1];\n    const r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n * @param {any} precompute\n * @returns {any}\n */\nexport function get_r_from_precompute(precompute) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    wasm.get_r_from_precompute(retptr, addHeapObject(precompute));\n    const r0 = getInt32Memory0()[retptr / 4 + 0];\n    const r1 = getInt32Memory0()[retptr / 4 + 1];\n    const r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\nlet cachedUint32Memory0 = new Uint32Array();\n\nfunction getUint32Memory0() {\n  if (cachedUint32Memory0.byteLength === 0) {\n    cachedUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n  }\n  return cachedUint32Memory0;\n}\n\nfunction passArrayJsValueToWasm0(array, malloc) {\n  const ptr = malloc(array.length * 4);\n  const mem = getUint32Memory0();\n  for (let i = 0; i < array.length; i++) {\n    mem[ptr / 4 + i] = addHeapObject(array[i]);\n  }\n  WASM_VECTOR_LEN = array.length;\n  return ptr;\n}\n/**\n * @param {string} msg\n * @param {boolean} hash_only\n * @param {any} r\n * @param {any[]} sig_frags\n * @param {string} pubkey\n * @returns {any}\n */\nexport function local_verify(msg, hash_only, r, sig_frags, pubkey) {\n  try {\n    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n    const ptr0 = passStringToWasm0(msg, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passArrayJsValueToWasm0(sig_frags, wasm.__wbindgen_malloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passStringToWasm0(pubkey, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len2 = WASM_VECTOR_LEN;\n    wasm.local_verify(retptr, ptr0, len0, hash_only, addHeapObject(r), ptr1, len1, ptr2, len2);\n    const r0 = getInt32Memory0()[retptr / 4 + 0];\n    const r1 = getInt32Memory0()[retptr / 4 + 1];\n    const r2 = getInt32Memory0()[retptr / 4 + 2];\n    if (r2) {\n      throw takeObject(r1);\n    }\n    return takeObject(r0);\n  } finally {\n    wasm.__wbindgen_add_to_stack_pointer(16);\n  }\n}\n\n/**\n * @param {Uint8Array} counterparties\n * @param {string} msg\n * @param {boolean} hash_only\n * @param {number} signer\n * @param {number} rng\n * @returns {Promise<any>}\n */\nexport function sign(counterparties, msg, hash_only, signer, rng) {\n  const ptr0 = passStringToWasm0(msg, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n  const len0 = WASM_VECTOR_LEN;\n  const ret = wasm.sign(addHeapObject(counterparties), ptr0, len0, hash_only, signer, rng);\n  return takeObject(ret);\n}\n\nfunction __wbg_adapter_40(arg0, arg1, arg2, arg3, arg4) {\n  wasm.wasm_bindgen__convert__closures__invoke3_mut__h1fa7dc56d2cd12f8(arg0, arg1, addHeapObject(arg2), arg3, addHeapObject(arg4));\n}\n\nfunction __wbg_adapter_53(arg0, arg1, arg2, arg3) {\n  wasm.wasm_bindgen__convert__closures__invoke2_mut__h09aaa711cefcd1d9(arg0, arg1, addHeapObject(arg2), addHeapObject(arg3));\n}\n\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n  if (stack_pointer == 1) throw new Error(\"out of js stack\");\n  heap[--stack_pointer] = obj;\n  return stack_pointer;\n}\n/**\n * Handler for `console.log` invocations.\n *\n * If a test is currently running it takes the `args` array and stringifies\n * it and appends it to the current output of the test. Otherwise it passes\n * the arguments to the original `console.log` function, psased as\n * `original`.\n * @param {Array<any>} args\n */\nexport function __wbgtest_console_log(args) {\n  try {\n    wasm.__wbgtest_console_log(addBorrowedObject(args));\n  } finally {\n    heap[stack_pointer++] = undefined;\n  }\n}\n\n/**\n * Handler for `console.debug` invocations. See above.\n * @param {Array<any>} args\n */\nexport function __wbgtest_console_debug(args) {\n  try {\n    wasm.__wbgtest_console_debug(addBorrowedObject(args));\n  } finally {\n    heap[stack_pointer++] = undefined;\n  }\n}\n\n/**\n * Handler for `console.info` invocations. See above.\n * @param {Array<any>} args\n */\nexport function __wbgtest_console_info(args) {\n  try {\n    wasm.__wbgtest_console_info(addBorrowedObject(args));\n  } finally {\n    heap[stack_pointer++] = undefined;\n  }\n}\n\n/**\n * Handler for `console.warn` invocations. See above.\n * @param {Array<any>} args\n */\nexport function __wbgtest_console_warn(args) {\n  try {\n    wasm.__wbgtest_console_warn(addBorrowedObject(args));\n  } finally {\n    heap[stack_pointer++] = undefined;\n  }\n}\n\n/**\n * Handler for `console.error` invocations. See above.\n * @param {Array<any>} args\n */\nexport function __wbgtest_console_error(args) {\n  try {\n    wasm.__wbgtest_console_error(addBorrowedObject(args));\n  } finally {\n    heap[stack_pointer++] = undefined;\n  }\n}\n\n/**\n * Runtime test harness support instantiated in JS.\n *\n * The node.js entry script instantiates a `Context` here which is used to\n * drive test execution.\n */\nexport class WasmBindgenTestContext {\n  static __wrap(ptr) {\n    const obj = Object.create(WasmBindgenTestContext.prototype);\n    obj.ptr = ptr;\n\n    return obj;\n  }\n\n  __destroy_into_raw() {\n    const { ptr } = this;\n    this.ptr = 0;\n\n    return ptr;\n  }\n\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_wasmbindgentestcontext_free(ptr);\n  }\n\n  /**\n   * Creates a new context ready to run tests.\n   *\n   * A `Context` is the main structure through which test execution is\n   * coordinated, and this will collect output and results for all executed\n   * tests.\n   */\n  constructor() {\n    const ret = wasm.wasmbindgentestcontext_new();\n    return WasmBindgenTestContext.__wrap(ret);\n  }\n\n  /**\n   * Inform this context about runtime arguments passed to the test\n   * harness.\n   *\n   * Eventually this will be used to support flags, but for now it's just\n   * used to support test filters.\n   * @param {any[]} args\n   */\n  args(args) {\n    const ptr0 = passArrayJsValueToWasm0(args, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.wasmbindgentestcontext_args(this.ptr, ptr0, len0);\n  }\n\n  /**\n   * Executes a list of tests, returning a promise representing their\n   * eventual completion.\n   *\n   * This is the main entry point for executing tests. All the tests passed\n   * in are the JS `Function` object that was plucked off the\n   * `WebAssembly.Instance` exports list.\n   *\n   * The promise returned resolves to either `true` if all tests passed or\n   * `false` if at least one test failed.\n   * @param {any[]} tests\n   * @returns {Promise<any>}\n   */\n  run(tests) {\n    const ptr0 = passArrayJsValueToWasm0(tests, wasm.__wbindgen_malloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.wasmbindgentestcontext_run(this.ptr, ptr0, len0);\n    return takeObject(ret);\n  }\n}\n\nasync function load(module, imports) {\n  if (typeof Response === \"function\" && module instanceof Response) {\n    if (typeof WebAssembly.instantiateStreaming === \"function\") {\n      try {\n        return await WebAssembly.instantiateStreaming(module, imports);\n      } catch (e) {\n        if (module.headers.get(\"Content-Type\") != \"application/wasm\") {\n          console.warn(\n            \"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\",\n            e\n          );\n        } else {\n          throw e;\n        }\n      }\n    }\n\n    const bytes = await module.arrayBuffer();\n    return WebAssembly.instantiate(bytes, imports);\n  }\n  const instance = await WebAssembly.instantiate(module, imports);\n\n  if (instance instanceof WebAssembly.Instance) {\n    return { instance, module };\n  }\n  return instance;\n}\n\nfunction getImports() {\n  const imports = {};\n  imports.wbg = {};\n  imports.wbg.__wbindgen_object_drop_ref = function (arg0) {\n    takeObject(arg0);\n  };\n  imports.wbg.__wbindgen_cb_drop = function (arg0) {\n    const obj = takeObject(arg0).original;\n    if (obj.cnt-- == 1) {\n      obj.a = 0;\n      return true;\n    }\n    const ret = false;\n    return ret;\n  };\n  imports.wbg.__wbindgen_string_new = function (arg0, arg1) {\n    const ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_jssendmsg_9558e1e6ccbf0bf6 = function () {\n    return handleError(function (arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n      try {\n        const ret = js_send_msg(\n          getStringFromWasm0(arg0, arg1),\n          arg2 >>> 0,\n          arg3 >>> 0,\n          getStringFromWasm0(arg4, arg5),\n          getStringFromWasm0(arg6, arg7)\n        );\n        return addHeapObject(ret);\n      } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n        wasm.__wbindgen_free(arg4, arg5);\n        wasm.__wbindgen_free(arg6, arg7);\n      }\n    }, arguments);\n  };\n  imports.wbg.__wbindgen_string_get = function (arg0, arg1) {\n    const obj = getObject(arg1);\n    const ret = typeof obj === \"string\" ? obj : undefined;\n    const ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n  };\n  imports.wbg.__wbg_jsreadmsg_3e2fec56a08697d4 = function () {\n    return handleError(function (arg0, arg1, arg2, arg3, arg4, arg5) {\n      try {\n        const ret = js_read_msg(getStringFromWasm0(arg0, arg1), arg2 >>> 0, arg3 >>> 0, getStringFromWasm0(arg4, arg5));\n        return addHeapObject(ret);\n      } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n        wasm.__wbindgen_free(arg4, arg5);\n      }\n    }, arguments);\n  };\n  imports.wbg.__wbindgen_bigint_from_u64 = function (arg0) {\n    const ret = BigInt.asUintN(64, arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_number_new = function (arg0) {\n    const ret = arg0;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_newnoargs_b5b063fc6c2f0376 = function (arg0, arg1) {\n    const ret = new Function(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_call_97ae9d8645dc388b = function () {\n    return handleError(function (arg0, arg1) {\n      const ret = getObject(arg0).call(getObject(arg1));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbindgen_object_clone_ref = function (arg0) {\n    const ret = getObject(arg0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_self_6d479506f72c6a71 = function () {\n    return handleError(function () {\n      const ret = self.self;\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_window_f2557cc78490aceb = function () {\n    return handleError(function () {\n      const ret = window.window;\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_globalThis_7f206bda628d5286 = function () {\n    return handleError(function () {\n      const ret = globalThis.globalThis;\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_global_ba75c50d1cf384f4 = function () {\n    return handleError(function () {\n      const ret = global.global;\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbindgen_is_undefined = function (arg0) {\n    const ret = getObject(arg0) === undefined;\n    return ret;\n  };\n  imports.wbg.__wbg_forEach_ce1177df15902e0c = function (arg0, arg1, arg2) {\n    try {\n      var state0 = { a: arg1, b: arg2 };\n      const cb0 = (arg0, arg1, arg2) => {\n        const { a } = state0;\n        state0.a = 0;\n        try {\n          return __wbg_adapter_40(a, state0.b, arg0, arg1, arg2);\n        } finally {\n          state0.a = a;\n        }\n      };\n      getObject(arg0).forEach(cb0);\n    } finally {\n      state0.a = state0.b = 0;\n    }\n  };\n  imports.wbg.__wbg_message_fe2af63ccc8985bc = function (arg0) {\n    const ret = getObject(arg0).message;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_name_48eda3ae6aa697ca = function (arg0) {\n    const ret = getObject(arg0).name;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_call_168da88779e35f61 = function () {\n    return handleError(function (arg0, arg1, arg2) {\n      const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_new_9962f939219f1820 = function (arg0, arg1) {\n    try {\n      var state0 = { a: arg0, b: arg1 };\n      const cb0 = (arg0, arg1) => {\n        const { a } = state0;\n        state0.a = 0;\n        try {\n          return __wbg_adapter_53(a, state0.b, arg0, arg1);\n        } finally {\n          state0.a = a;\n        }\n      };\n      const ret = new Promise(cb0);\n      return addHeapObject(ret);\n    } finally {\n      state0.a = state0.b = 0;\n    }\n  };\n  imports.wbg.__wbg_resolve_99fe17964f31ffc0 = function (arg0) {\n    const ret = Promise.resolve(getObject(arg0));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_then_11f7a54d67b4bfad = function (arg0, arg1) {\n    const ret = getObject(arg0).then(getObject(arg1));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_then_cedad20fbbd9418a = function (arg0, arg1, arg2) {\n    const ret = getObject(arg0).then(getObject(arg1), getObject(arg2));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_buffer_3f3d764d4747d564 = function (arg0) {\n    const ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_new_8c3f0052272a457a = function (arg0) {\n    const ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_set_83db9690f9353e79 = function (arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n  };\n  imports.wbg.__wbg_length_9e1ae1900cb0fbd5 = function (arg0) {\n    const ret = getObject(arg0).length;\n    return ret;\n  };\n  imports.wbg.__wbindgen_throw = function (arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n  };\n  imports.wbg.__wbindgen_memory = function () {\n    const ret = wasm.memory;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_new_abda76e883ba8a5f = function () {\n    const ret = new Error();\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_stack_658279fe44541cf6 = function (arg0, arg1) {\n    const ret = getObject(arg1).stack;\n    const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n  };\n  imports.wbg.__wbg_error_f851667af71bcfc6 = function (arg0, arg1) {\n    try {\n      console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n      wasm.__wbindgen_free(arg0, arg1);\n    }\n  };\n  imports.wbg.__wbg_log_d59c74802fa44fe2 = function (arg0, arg1) {\n    console.log(getStringFromWasm0(arg0, arg1));\n  };\n  imports.wbg.__wbg_static_accessor_document_0187e21f53c04a48 = function () {\n    const ret = document;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_String_0713d2a3d2b5f6b1 = function (arg0, arg1) {\n    const ret = String(getObject(arg1));\n    const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n  };\n  imports.wbg.__wbg_self_74338d9cb12c5d75 = function (arg0) {\n    const ret = getObject(arg0).self;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_jsval_eq = function (arg0, arg1) {\n    const ret = getObject(arg0) === getObject(arg1);\n    return ret;\n  };\n  imports.wbg.__wbg_getElementById_4c39186cc7ced742 = function (arg0, arg1, arg2) {\n    const ret = getObject(arg0).getElementById(getStringFromWasm0(arg1, arg2));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_settextcontent_344de5dc2a8e15ca = function (arg0, arg1, arg2) {\n    getObject(arg0).textContent = getStringFromWasm0(arg1, arg2);\n  };\n  imports.wbg.__wbg_textcontent_46a9e23ba5cbd900 = function (arg0, arg1) {\n    const ret = getObject(arg1).textContent;\n    const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n  };\n  imports.wbg.__wbg_stack_2ac21c4ea9c454f4 = function (arg0) {\n    const ret = getObject(arg0).stack;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_stack_475ccfd121fab8c9 = function (arg0, arg1) {\n    const ret = getObject(arg1).stack;\n    const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n  };\n  imports.wbg.__wbindgen_closure_wrapper551 = function (arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 117, __wbg_adapter_24);\n    return addHeapObject(ret);\n  };\n\n  return imports;\n}\n\nfunction initMemory(imports, maybe_memory) {}\n\nfunction finalizeInit(instance, module) {\n  wasm = instance.exports;\n  init.__wbindgen_wasm_module = module;\n  cachedInt32Memory0 = new Int32Array();\n  cachedUint32Memory0 = new Uint32Array();\n  cachedUint8Memory0 = new Uint8Array();\n\n  return wasm;\n}\n\nfunction initSync(module) {\n  const imports = getImports();\n\n  initMemory(imports);\n\n  if (!(module instanceof WebAssembly.Module)) {\n    module = new WebAssembly.Module(module);\n  }\n\n  const instance = new WebAssembly.Instance(module, imports);\n\n  return finalizeInit(instance, module);\n}\n\nasync function init(input) {\n  if (typeof input === \"undefined\") {\n    input = wasmData;\n    // input = new URL('dkls_bg.wasm', import.meta.url);\n    throw new Error(\"no\");\n  }\n  const imports = getImports();\n\n  if (\n    typeof input === \"string\" ||\n    (typeof Request === \"function\" && input instanceof Request) ||\n    (typeof URL === \"function\" && input instanceof URL)\n  ) {\n    input = fetch(input);\n  }\n\n  initMemory(imports);\n\n  const { instance, module } = await load(await input, imports);\n\n  return finalizeInit(instance, module);\n}\n\nexport { finalizeInit, getImports, initSync };\nexport default init;\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","wasm","heap","Array","fill","undefined","getObject","idx","push","heap_next","length","takeObject","ret","dropObject","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","cachedUint8Memory0","Uint8Array","getUint8Memory0","byteLength","memory","buffer","getStringFromWasm0","ptr","len","subarray","addHeapObject","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","mem","offset","code","charCodeAt","slice","cachedInt32Memory0","Int32Array","getInt32Memory0","__wbg_adapter_24","arg0","arg1","arg2","_dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h393860affdd597ff","handleError","f","args","apply","__wbindgen_exn_store","batch_size","random_generator","state","retptr","__wbindgen_add_to_stack_pointer","ptr0","__wbindgen_malloc","__wbindgen_realloc","len0","r0","r1","random_generator_free","rng","threshold_signer","session","player_index","player_count","threshold","share","pubkey","ptr1","len1","ptr2","len2","threshold_signer_free","signer","setup","precompute","parties","local_sign","msg","hash_only","get_r_from_precompute","cachedUint32Memory0","Uint32Array","passArrayJsValueToWasm0","array","i","local_verify","sig_frags","sign","counterparties","stack_pointer","addBorrowedObject","Error","__wbgtest_console_log","__wbgtest_console_debug","__wbgtest_console_info","__wbgtest_console_warn","__wbgtest_console_error","WasmBindgenTestContext","__wrap","create","__destroy_into_raw","free","__wbg_wasmbindgentestcontext_free","constructor","wasmbindgentestcontext_new","wasmbindgentestcontext_args","run","tests","wasmbindgentestcontext_run","getImports","imports","wbg","__wbindgen_object_drop_ref","__wbindgen_cb_drop","original","cnt","a","__wbindgen_string_new","__wbg_jssendmsg_9558e1e6ccbf0bf6","arg3","arg4","arg5","arg6","arg7","js_send_msg","__wbindgen_free","arguments","__wbindgen_string_get","x","__wbg_jsreadmsg_3e2fec56a08697d4","js_read_msg","__wbindgen_bigint_from_u64","BigInt","asUintN","__wbindgen_number_new","__wbg_newnoargs_b5b063fc6c2f0376","__wbg_call_97ae9d8645dc388b","__wbindgen_object_clone_ref","__wbg_self_6d479506f72c6a71","__wbg_window_f2557cc78490aceb","__wbg_globalThis_7f206bda628d5286","__wbg_global_ba75c50d1cf384f4","global","__wbindgen_is_undefined","__wbg_forEach_ce1177df15902e0c","state0","b","cb0","wasm_bindgen__convert__closures__invoke3_mut__h1fa7dc56d2cd12f8","__wbg_adapter_40","forEach","__wbg_message_fe2af63ccc8985bc","message","__wbg_name_48eda3ae6aa697ca","name","__wbg_call_168da88779e35f61","__wbg_new_9962f939219f1820","wasm_bindgen__convert__closures__invoke2_mut__h09aaa711cefcd1d9","__wbg_adapter_53","Promise","__wbg_resolve_99fe17964f31ffc0","resolve","__wbg_then_11f7a54d67b4bfad","then","__wbg_then_cedad20fbbd9418a","__wbg_buffer_3f3d764d4747d564","__wbg_new_8c3f0052272a457a","__wbg_set_83db9690f9353e79","__wbg_length_9e1ae1900cb0fbd5","__wbindgen_throw","__wbindgen_memory","__wbg_new_abda76e883ba8a5f","__wbg_stack_658279fe44541cf6","stack","__wbg_error_f851667af71bcfc6","console","error","__wbg_log_d59c74802fa44fe2","log","__wbg_static_accessor_document_0187e21f53c04a48","document","__wbg_String_0713d2a3d2b5f6b1","String","__wbg_self_74338d9cb12c5d75","__wbindgen_jsval_eq","__wbg_getElementById_4c39186cc7ced742","getElementById","__wbg_settextcontent_344de5dc2a8e15ca","textContent","__wbg_textcontent_46a9e23ba5cbd900","__wbg_stack_2ac21c4ea9c454f4","__wbg_stack_475ccfd121fab8c9","__wbindgen_closure_wrapper551","dtor","real","_len","_key","__wbindgen_export_2","makeMutClosure","finalizeInit","instance","init","__wbindgen_wasm_module","initSync","WebAssembly","Module","Instance","async","input","wasmData","Request","URL","fetch","Response","instantiateStreaming","headers","warn","bytes","arrayBuffer","instantiate","load"],"sourceRoot":""}